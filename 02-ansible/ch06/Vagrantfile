# -*- mode: ruby -*-
# vi: set ft=ruby :
#Cenos Node #
Vagrant.configure("2") do |config|
  config.vm.boot_timeout = 1800 #30 minutes
#=================#
# Ansible-Node01
#=================#
  (1..3).each do |i|
    config.vm.define "ansible-node0#{i}" do |cfg|
     cfg.vm.box = "centos/7"     #provisioning 할 운영체제 선택
     cfg.vm.provider "virtualbox" do |vb|
      vb.name = "Ansible-node0#{i}"      #가상머신 이름지정
     end
    cfg.vm.host_name = "ansible-node0#{i}"    #가상머신 hostname 지정
    cfg.vm.network "private_network", ip: "192.168.56.11#{i}"  
    cfg.vm.network "forwarded_port", guest: 22, host: "6001#{i}", auto_correct: true, id: "ssh"
    cfg.vm.synced_folder "../data", "/vagrant", disabled: true   #동기화 폴더 사용하지 않는걸 true 한것
    cfg.vm.provision "shell", path: "bash_ssh_conf_4_Centos.sh"
    end
end
#=================#
# Ubuntu nodes
#=================#

  (4..6).each do |i|
   config.vm.define "ansible-node0#{i}" do |cfg|
    cfg.vm.box = "ubuntu/trusty64"     #provisioning 할 운영체제 선택
    cfg.vm.provider "virtualbox" do |vb|
     vb.name = "Ansible-node0#{i}"      #가상머신 이름지정
     vb.cpus = 2
     vb.memory =2048  
    end
    cfg.vm.host_name = "ansible-node0#{i}"    #가상머신 hostname 지정
    cfg.vm.network "private_network", ip: "192.168.56.1#{i}"  
    cfg.vm.network "forwarded_port", guest: 22, host: "6001#{i}", auto_correct: true, id: "ssh"
    cfg.vm.synced_folder "../data", "/vagrant", disabled: true   #동기화 폴더 사용하지 않는걸 true 한것
 
   end
end
#Ansible-Node05
  
#=================#
# Ansible Server
#=================#

  config.vm.define "ansible-server" do |cfg|
   cfg.vm.box = "centos/7"     #provisioning 할 운영체제 선택
   cfg.vm.provider "virtualbox" do |vb|
    vb.name = "Ansible-Server"      #가상머신 이름지정
   end
  cfg.vm.host_name = "ansible-server"    #가상머신 hostname 지정
  cfg.vm.network "private_network", ip: "192.168.56.10"  
  cfg.vm.network "forwarded_port", guest: 22, host: 60010, auto_correct: true, id: "ssh"
  cfg.vm.synced_folder "../data", "/vagrant", disabled: true   #동기화 폴더 사용하지 않는걸 true 한것
  cfg.vm.provision "shell", inline: "yum install epel-release -y"
  cfg.vm.provision "shell", inline: "yum install ansible -y"
  cfg.vm.provision "file", source: "ansible_env_ready.yml", destination: "ansible_env_ready.yml"
  cfg.vm.provision "shell", inline: "ansible-playbook ansible_env_ready.yml"
  cfg.vm.provision "file", source: "auto_pass.yml", destination: "auto_pass.yml"
  cfg.vm.provision "shell", inline: "ansible-playbook auto_pass.yml", privileged: false 
 end
end
